package j4rent.Locatarios.PreContrato;

import Funcoes.Dates;
import Funcoes.DbMain;
import Funcoes.FuncoesGlobais;
import Funcoes.VariaveisGlobais;
import Funcoes.jDirectory;
import j4rent.Locatarios.PreContrato.evalute.DataBaseFields;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FilenameUtils;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;

/**
 *
 * @author Samic
 */
public class jGerCtro extends javax.swing.JDialog {
    private String _contrato;
    private String _nome;
    private String _rgprp;
    private String _rgimv;
    private DbMain conn = VariaveisGlobais.conexao;
    
    public void setRgprp(String _rgprp) { this._rgprp = _rgprp; }

    public void setRgimv(String _rgimv) { this._rgimv = _rgimv; }
        
    public void setContrato(String _contrato) { this._contrato = _contrato; }

    public void setNome(String _nome) { this._nome = _nome; }

    public void setDados(String rgprp, String rgimv, String contrato, String nome) {        
        this._rgprp = rgprp;
        this._rgimv = rgimv;
        jContrato.setText(contrato);
        this._contrato = contrato;
        jNome.setText(nome);
        this._nome = nome;
    }

    /**
     * Creates new form jGerCtro
     */
    public jGerCtro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        // centraliza
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jContrato = new javax.swing.JTextField();
        jBtnModelo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSaida = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jModelo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBtnGerar = new javax.swing.JButton();
        jBtnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:: Gera Contrato por modelos.");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(793, 212));
        setModal(true);
        setPreferredSize(new java.awt.Dimension(793, 212));
        setResizable(false);
        setSize(new java.awt.Dimension(793, 212));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jContrato.setEditable(false);

        jBtnModelo.setText("...");
        jBtnModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModeloActionPerformed(evt);
            }
        });

        jLabel3.setText("Pasta de Saida:");

        jSaida.setEditable(false);

        jLabel4.setText("Nome:");

        jNome.setEditable(false);

        jLabel1.setText("Pr√©-Contrato:");

        jModelo.setEditable(false);

        jLabel2.setText("Pasta de Modelo:");

        jBtnGerar.setText("Gerar Contrato");
        jBtnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGerarActionPerformed(evt);
            }
        });

        jBtnSair.setText("Sair");
        jBtnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSaida))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jModelo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 387, Short.MAX_VALUE)
                        .addComponent(jBtnGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnModelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnGerar)
                    .addComponent(jBtnSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSairActionPerformed
        dispose();
    }//GEN-LAST:event_jBtnSairActionPerformed

    private void jBtnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGerarActionPerformed
        List<String> vars = new ArrayList<>();
        try {
            vars = PegarVariaveisTexto(new File(jModelo.getText().trim()));
        } catch (IOException ioEx) { ioEx.printStackTrace(); }
        for (String item : vars) {
            item = RetiraBracets(item);
            
            String[] itens = item.split("@",0);
            itens = RetiraBlanks(itens, false);
            
            String[] formula = {};
            for (String sitem : itens) {
                if (sitem.contains(".")) {
                    String[] scom = Reverse(sitem.toString().split("\\."));                    
                    formula = FuncoesGlobais.ArrayAdd(formula, Prepara(scom));
                } else {
                    formula = FuncoesGlobais.ArrayAdd(formula, FieldDbReturn(sitem,false));
                }                    
            }
            if (formula.length > 0) {
                for (int pos = 0; pos <= formula.length - 1; pos++) formula[pos] = MontagemFinal(formula[pos]);
                // Parei aqui na fase 6
                for (String na : formula) System.out.println(na);
            }
        }
    }//GEN-LAST:event_jBtnGerarActionPerformed

    private String MontagemFinal(String formula) {
        String campos = formula;
        if (formula.indexOf("'") > 0) {
            int posicao = 0;
            while (formula.indexOf("'", posicao) > 0) {
                int ipos = formula.indexOf("'", posicao);
                int fpos = formula.indexOf("'", ipos + 1);
                String expr = formula.substring(ipos + 1, fpos);
                String result = "";
                if (expr.contains("=")) {
                    String[] _proc = expr.split("=");
                    result = ProcessaCampos(_proc[0], _proc[1]);
                } else {
                    result = expr;
                }
                formula = formula.substring(0, ipos + 1) + result + formula.substring(fpos);
                //formula = formula.substring(fpos + 1);
                posicao = (formula.substring(0, ipos + 1) + result).length() + 1;
            }
            campos = formula;
        } else {
            String result = null;
            if (formula.contains("=")) {
                String[] _proc = formula.split("=");
                result = ProcessaCampos(_proc[0], _proc[1]);
            } else {
                result = formula;
            }
            campos = result;
        }        
        return campos;
    }
    
    private String FindInFields(Object[][] tabela, String campo) {
        int pos = FuncoesGlobais.FindinObjects(tabela, 1, campo);
        return tabela[pos][0].toString();
    }
    
    private String ProcessaCampos(String tabela, String campo) {
        String retorno = null;
        String selectSQL = "";
        String databaseField = null;
        boolean isCart = false;
        
        switch (tabela.trim().toLowerCase()) {
            case "prop":
                databaseField = FindInFields(new DataBaseFields().DatabaseVariables(0), campo);
                selectSQL = "SELECT `" + databaseField + "` FROM `proprietarios` WHERE rgprp = '" + this._rgprp + "' LIMIT 1";
                break;
            case "imov":
                databaseField = FindInFields(new DataBaseFields().DatabaseVariables(1), campo);
                selectSQL = "SELECT `" + databaseField + "` FROM `imoveis` WHERE `rgprp` = '" + this._rgprp + 
                            "' AND `rgimv` = '" + this._rgimv + "' LIMIT 1";
                break;
            case "loca":
                databaseField = FindInFields(new DataBaseFields().DatabaseVariables(2), campo);
                selectSQL = "SELECT `" + databaseField + "` FROM `prelocatarios` WHERE `rgprp` = '" + this._rgprp + 
                            "' AND `rgimv` = '" + this._rgimv + "' AND `contrato` = '" + this._contrato + "' LIMIT 1";
                break;
            case "soci":
                databaseField = FindInFields(new DataBaseFields().DatabaseVariables(3), campo);
                selectSQL = "SELECT `" + databaseField + "` FROM `prelocatarios` WHERE `rgprp` = '" + this._rgprp + 
                            "' AND `rgimv` = '" + this._rgimv + "' AND `contrato` = '" + this._contrato + "' LIMIT 1";
                break;
            case "fiad":
                databaseField = FindInFields(new DataBaseFields().DatabaseVariables(4), campo);
                selectSQL = "SELECT `" + databaseField + "` FROM `prefiadores` WHERE `rgprp` = '" + this._rgprp + 
                            "' AND `rgimv` = '" + this._rgimv + "' AND `contrato` = '" + this._contrato + "' LIMIT 1";
                break;
            case "cart":
                databaseField = FindInFields(new DataBaseFields().DatabaseVariables(5), campo);
                if (LerValor.LerValor.isNumeric(databaseField)) {
                    selectSQL = "SELECT `campo` AS `" + databaseField + "` FROM `precarteira` WHERE `rgprp` = '" + this._rgprp + 
                                "' AND `rgimv` = '" + this._rgimv + "' AND `contrato` = '" + this._contrato + "' LIMIT 1";
                    isCart = true;
                } else {
                    selectSQL = "SELECT `" + databaseField + "` FROM `precarteira` WHERE `rgprp` = '" + this._rgprp + 
                                "' AND `rgimv` = '" + this._rgimv + "' AND `contrato` = '" + this._contrato + "' LIMIT 1";
                }
                break;
        }
         ResultSet pResult = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY);
         try {
             while (pResult.next()) {
                retorno = pResult.getString(databaseField);
                if (isCart) {
                    ResultSet rs = conn.AbrirTabela("SELECT RetAvValorRid2(" + retorno + ") AS `" + databaseField + "`", ResultSet.CONCUR_READ_ONLY);
                    try {
                        while (rs.next()) {
                            retorno = rs.getString(databaseField);
                        }
                    } catch (SQLException exSQL) { retorno = null; } finally { DbMain.FecharTabela(rs); }
                }
             }
         } catch (SQLException sqlEx) { sqlEx.printStackTrace(); retorno = null; } finally {
             DbMain.FecharTabela(pResult);
         }
         return retorno;
    }
    
    private String Prepara(String[] scom) {
        String outvar = "";
        int fechaParenteses = 0; boolean seFormat = false;
        int tcampos = scom.length; int contacampos = 0;
        for (String var : scom) {
            contacampos++;
            switch (var.toString().toLowerCase()) {
                case "capitule()":
                    outvar += "Capitule(";
                    fechaParenteses++;
                    seFormat = false;
                    break;
                case "extenso()":
                    outvar += "Extenco(";
                    fechaParenteses++;
                    seFormat = false;
                    break;                            
                case "trim()":
                    outvar += "Trim(";
                    fechaParenteses++;
                    seFormat = false;
                    break;
                case "toupper()":
                    outvar += "toUpperCase(";
                    fechaParenteses++;
                    seFormat = false;
                    break;
                case "tolower()":
                    outvar += "toLowerCase{";
                    fechaParenteses++;
                    seFormat = false;
                    break;
                default:
                    if (var.toLowerCase().contains("se(")) {
                        outvar += "Condicao(<<exp>> ";
                        int sepos = var.indexOf("se(");
                        String formula = var.substring(sepos + 3);
                        int sefimpos = formula.indexOf(";");
                        outvar += formula.substring(0, sefimpos) + ", ";
                        formula = formula.substring(sefimpos + 1).trim();
                        sefimpos = formula.indexOf(";");
                        String _teste = formula.substring(0, sefimpos).trim();
                        if (!_teste.startsWith("'")) {
                            String _field = formula.substring(0, sefimpos);
                            outvar += FieldDbReturn(_field,true) + ", ";
                        } else {
                            outvar += formula.substring(0, sefimpos) + ",";
                        }
                        _teste = formula.substring(sefimpos + 1).trim();
                        if (!_teste.startsWith("'")) {
                            String _field = formula.substring(sefimpos + 1).trim();
                            _field = _field.substring(0, _field.length() - 1);
                            outvar += FieldDbReturn(_field,true) + ")";
                            
                            if (contacampos < tcampos) {
                                String[] temp = new String[tcampos - contacampos];
                                System.arraycopy(scom,contacampos,temp,0,scom.length - contacampos);
                                
                                outvar = outvar.replace("<<exp>>", Prepara(temp)); 
                                return outvar + FuncoesGlobais.Repete(")", fechaParenteses);
                            }
                            
                        } else {
                            outvar += formula.substring(sefimpos + 1);
                        }

                        seFormat = true;
                    } else if (var.toLowerCase().contains("format(")) {
                        outvar += "Format(<<exp>>";
                        int sepos = var.indexOf("format(");
                        String formula = var.substring(sepos + 7);
                        int sefimpos = formula.indexOf(",");
                        if (formula.substring(0, sefimpos).toLowerCase().equals("caracteres")) {
                            outvar += ", 0, " + formula.substring(sefimpos + 1);
                        } else if (formula.substring(0, sefimpos).toLowerCase().equals("data")) {
                            outvar += ", 1, " + formula.substring(sefimpos + 1);
                        } else if (formula.substring(0, sefimpos).toLowerCase().equals("valor")) {
                            outvar += ", 2, " + formula.substring(sefimpos + 1);
                        }

                        seFormat = true;
                    } else {
                        if (seFormat) {
                            outvar =  outvar.replace("<<exp>>", FieldDbReturn(var,true)) + FuncoesGlobais.Repete(")", fechaParenteses);
                        } else {
                            outvar += FieldDbReturn(var,true) + FuncoesGlobais.Repete(")", fechaParenteses);
                        }
                    }
            }
        }
            
        return outvar;
    }
    
    private String FieldDbReturn(String value, boolean aspas) {
        
        return aspas ? "'" + value + "'" : value;
    }
    
    private String[] RetiraBlanks(String[] value, boolean breverse) {
        List<String> _value = new ArrayList<>();
        for (String item : value) if (!item.trim().equalsIgnoreCase("")) _value.add(item);
        if (breverse) Collections.reverse(_value);
        return _value.toArray(new String[0]);
    }
    
    private String[] Reverse(String[] value) {
        List<String> _value = new ArrayList<>();
        for (String item : value) _value.add(item);
        Collections.reverse(_value);
        return _value.toArray(new String[0]);
    }
    
    private String RetiraBracets(String value) {
        value = value.substring(1);
        return value.substring(0,value.length() -2);        
    }
    
    private void jBtnModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModeloActionPerformed
        new jDirectory("reports/Modelos/");
        String pathModelo = "reports/Modelos/";
        String fileModelo = "";
        
        JFileChooser dFC = new JFileChooser();
        dFC.setCurrentDirectory(new File(pathModelo));
        dFC.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);  
        FileNameExtensionFilter filterModelo = new FileNameExtensionFilter("Documentos", "doc", "docx");
        dFC.setFileFilter(filterModelo);
        int resposta = dFC.showOpenDialog(null);  
        if (resposta == JFileChooser.CANCEL_OPTION) return;
        
        if (resposta == JFileChooser.APPROVE_OPTION) {  
           fileModelo = dFC.getSelectedFile().getPath();  
        }
        jModelo.setText(fileModelo);
        
        String fileExt = "";
        if (fileModelo.isEmpty()) return;
        fileExt = FilenameUtils.getExtension(fileModelo);
        String pathDocumentos = javax.swing.filechooser.FileSystemView.getFileSystemView().getDefaultDirectory().toString();
        String fileSaida = pathDocumentos + "\\" + jContrato.getText().trim() + "_" + jNome.getText().trim().replace(" ", "-") + "_" + Dates.DateFormata("ddMMyyyy", new Date()) + "." + fileExt;
        jSaida.setText(fileSaida);        
    }//GEN-LAST:event_jBtnModeloActionPerformed

    private List<String> PegarVariaveisTexto(File arqEntrada) throws IOException {
        List<String> retorno = new ArrayList<>();
        
        InputStream fileName = Files.newInputStream(Paths.get(arqEntrada.getAbsolutePath()));
        try {
            XWPFDocument doc = new XWPFDocument( fileName ); 

            List<XWPFParagraph> list = doc.getParagraphs();
            for (XWPFParagraph paragraph : list) {
                String line = paragraph.getText();
                while (line.indexOf("<@") > -1) {
                    int ipos = line.indexOf("<@");
                    if (ipos > -1) {
                        line = line.substring(ipos);
                        int fpos = line.indexOf("/>");
                        retorno.add(line.substring(0, fpos + 2));
                        line = line.substring(fpos + 2);
                    }
                };
            }            
        } catch (Exception e) { e. printStackTrace(); }
        return retorno;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jGerCtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jGerCtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jGerCtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jGerCtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jGerCtro dialog = new jGerCtro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnGerar;
    private javax.swing.JButton jBtnModelo;
    private javax.swing.JButton jBtnSair;
    private javax.swing.JTextField jContrato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jModelo;
    private javax.swing.JTextField jNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jSaida;
    // End of variables declaration//GEN-END:variables
}
